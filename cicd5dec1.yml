name: CI-CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  build:
    name: Build and Publish Artifacts
    runs-on: self-hosted
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 1.8
          distribution: 'temurin'

      # Step 3: Build the Maven project
      - name: Build with Maven
        run: mvn clean package

      # Step 4: Upload artifacts
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: maven-artifact
          path: target/*.jar  # Adjust this to match your build output

  deploy:
    name: Deploy to Server
    runs-on: self-hosted
    needs: build  # This ensures the build job completes first
    steps:
      # Step 1: Download the artifact
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: maven-artifact

      # Step 2: Deploy to the server
      - name: Deploy Artifact to Server
        env:
          PASSWORD: ${{ secrets.DEPLOY_SERVER_PASSWORD }}
        run: |
          sshpass -p "$PASSWORD" scp maven-artifact.jar ${{ secrets.DEPLOY_SERVER_USER }}@${{ secrets.DEPLOY_SERVER_HOST }}:/home/${{ secrets.DEPLOY_SERVER_USER }}/app/
          sshpass -p "$PASSWORD" ssh ${{ secrets.DEPLOY_SERVER_USER }}@${{ secrets.DEPLOY_SERVER_HOST }} << 'EOF'
            cd /home/${{ secrets.DEPLOY_SERVER_USER }}/app/
            nohup java -jar maven-artifact.jar > app.log 2>&1 &
          EOF
